
==================== FINAL INTERFACE ====================
2017-01-18 21:24:44.993023 UTC

interface main@main:Main 8001
  interface hash: a5330ca0b61eab324a9271bec220146f
  ABI hash: c31442a76cf04e884215de0a7ad918ab
  export-list hash: 1969198d0d842ffd7543643a105b8e47
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 11382832effb81630780fcc02a0e3de0
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.0.0*
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      curl-1.3.8@curl-1.3.8-B8AxMCtSRkiFrZLK4gerBe
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
import  -/  base-4.9.0.0:Control.Monad 7767aebfd53f0b584cef2fe66ad3986c
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:Data.OldList 0058409f994fb13ae0616e3f1e5b4dae
import  -/  base-4.9.0.0:Data.Tuple acb0ed10307ed88df6c81b8589f4de16
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:System.IO eb1d40aa793a4047069a5023f2ebcfe3
import  -/  base-4.9.0.0:Text.Read 9c1be14f7e5eac8b18bcb566c5763677
import  -/  curl-1.3.8@curl-1.3.8-B8AxMCtSRkiFrZLK4gerBe:Network.Curl 64b46e79f5bbc6daca00e2a445a4b2c0
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
f9a1b657b930189f504a17fe1c8add04
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
a841548999902b49ae77220936ff21b4
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Network.Curl.curlGetString1
                        Main.main4
                        (GHC.Types.[] @ Network.Curl.Opts.CurlOption)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Text.Read.readEither6
                        @ [GHC.Base.String]
                        (Text.ParserCombinators.ReadP.run
                           @ [GHC.Base.String]
                           Main.main3
                           (case ipv1 of wild { (,) ds2 y -> y })) of wild {
                   []
                   -> case GHC.Err.error
                             @ 'GHC.Types.PtrRepLifted
                             @ [GHC.Base.String]
                             GHC.Err.errorWithoutStackTrace_wild1
                               `cast`
                             (Sym (GHC.Classes.N:IP[0]
                                       <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                             Text.Read.readEither4
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   : x ds
                   -> case ds of wild1 {
                        [] -> Main.main2 x ipv
                        : ipv2 ipv3
                        -> case GHC.Err.error
                                  @ 'GHC.Types.PtrRepLifted
                                  @ [GHC.Base.String]
                                  GHC.Err.errorWithoutStackTrace_wild1
                                    `cast`
                                  (Sym (GHC.Classes.N:IP[0]
                                            <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                                  Text.Read.readEither2
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                           of {} } } }) -}
0c84b8c5b253af5782feaf70f081a655
  main2 ::
    [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
447ad6ff350e03b8954ae2fad525e83b
  main3 :: Text.ParserCombinators.ReadP.P [GHC.Base.String]
  {- Unfolding: (GHC.Read.$wlist
                   @ [GHC.Types.Char]
                   GHC.Read.$fReadChar1
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <GHC.Base.String>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <GHC.Base.String>_R)))
                   @ [GHC.Base.String]
                   (Text.Read.readEither5 @ [GHC.Base.String])) -}
4264543bdc2039fc9c8efcf050bc1de3
  main4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "http://ponyipsum.com/api/?type=pony-and-filler&start-with-lorem=1"#) -}
1896c1d930214f4c918bbe8c9c8647f3
  main5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

